import jpype
import asposecells  # pip install aspose-cells

# -------- Start the JVM --------
jpype.startJVM(classpath=[asposecells.__jar__])     # JPype â‰¥ 1.4
from jpype import JImplements, JOverride           # decorators are faster than JProxy

from com.aspose.cells import LoadOptions, Workbook, MemorySetting

# -------- Implement the Java interface --------
@JImplements("com.aspose.cells.LightCellsDataHandler")
class MyHandler(object):

    @JOverride          # worksheet-level filter
    def startSheet(self, sheet):
        return sheet.getName() == "Data"           # keep only one sheet

    @JOverride          # row-level filter
    def startRow(self, row):
        self.rowIdx = row.getIndex()
        return True                                # process this row

    @JOverride          # called once per cell that survived the two filters
    def processCell(self, cell):
        print(self.rowIdx, cell.getColumn(), cell.getValue())
        return True

    # These two must exist; return value is ignored
    def endRow(self):
        return True
    def endSheet(self):
        return True

handler = MyHandler()          # JPype turns it into a Java proxy on instantiation

# -------- Configure streaming load --------
opts = LoadOptions()
opts.setLightCellsDataHandler(handler)
opts.setMemorySetting(MemorySetting.MEMORY_PREFERENCE)   # keep rows on disk
opts.setParseFormulaOnOpen(False)                        # skip formula parsing

# -------- Trigger parsing (streaming happens here) --------
Workbook("really_big.xlsx", opts)
jpype.shutdownJVM()
